/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.5.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.wolfofbad.elibraryapi.generated.api

import io.swagger.v3.oas.annotations.Operation
import io.swagger.v3.oas.annotations.Parameter
import io.swagger.v3.oas.annotations.media.Content
import io.swagger.v3.oas.annotations.media.Schema
import io.swagger.v3.oas.annotations.responses.ApiResponse
import io.swagger.v3.oas.annotations.tags.Tag
import org.springframework.http.HttpStatus
import org.springframework.http.ResponseEntity
import org.springframework.validation.annotation.Validated
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RequestMethod
import ru.wolfofbad.elibraryapi.generated.model.ApiErrorResponse
import ru.wolfofbad.elibraryapi.generated.model.ArticleResponse
import ru.wolfofbad.elibraryapi.generated.model.RateLimitErrorResponse

@Validated
@Tag(name = "articles", description = "The articles API")
interface ArticleApi {

    @Operation(
        summary = "Получить информацию о статье",
        operationId = "getArticleInfo",
        description = """""",
        responses = [
            ApiResponse(
                responseCode = "200",
                description = "Информация успешно получена",
                content = [Content(schema = Schema(implementation = ArticleResponse::class))]
            ),
            ApiResponse(
                responseCode = "400",
                description = "Некорректные параметры запроса",
                content = [Content(schema = Schema(implementation = ApiErrorResponse::class))]
            ),
            ApiResponse(
                responseCode = "429",
                description = "Слишком много запросов к сайту",
                content = [Content(schema = Schema(implementation = RateLimitErrorResponse::class))]
            )
        ]
    )
    @RequestMapping(
        method = [RequestMethod.GET],
        value = ["/article-info/{id}"],
        produces = ["application/json"]
    )
    fun getArticleInfo(
        @Parameter(
            description = "",
            required = true
        ) @PathVariable("id") id: Long
    ): ResponseEntity<ArticleResponse> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
